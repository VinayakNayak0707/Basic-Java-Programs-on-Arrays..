//There are many program go and watch in main

package practi;
import java.util.*;
public class Java_pr {

#function to find second largest number in array

	public static void second_largest_index() {
	Scanner sc = new Scanner(System.in);
	System.out.println("enter the number of items");
	int n = sc.nextInt();
	int[] array = new int[n];
	System.out.println("enter the items");
	for(int i=0;i<n;i++) {
		array[i]=sc.nextInt();
	}
	Arrays.sort(array);
	System.out.println(" items");
	for(int i=0;i<array.length;i++) {
		System.out.println(array[i]);
	}
	System.out.println("second largest");
	System.out.println(array[array.length-2]);
	System.out.println("Second array index" +( n-2));
    }
    
   	#function to find Duplicate elments in array
	public static void  Duplicate_element() {
    Scanner sc = new Scanner(System.in);
	System.out.println("enter the number of items");
	int n = sc.nextInt();
	int[] array = new int[n];
	System.out.println("enter the items");
	for(int i=0;i<n;i++) {
		array[i]=sc.nextInt();
	}
	int j =0 ;
	for(int i=0;i<n;i++) {
		array[j]=array[i];
		j++;
	}
	
	for(int i=0;i<n;i++) {
		for(j=i+
				1;j<n;j++) {
			if(array[i]==array[j]) {
				System.out.println("duplicate elments are"+array[i]);
			}
		}
	}
  }

  #function to find binary search 
	public static void Binary_Search() {
		Scanner sc = new Scanner(System.in);
		System.out.println("enter the number of items");
		int n = sc.nextInt();
		int[] array = new int[n];
		System.out.println("enter the items");
		for(int i=0;i<n;i++) {
			array[i]=sc.nextInt();
		}
		int key;
		System.out.println("enter the key element to find");
		key = sc.nextInt();
		int first=0;
		int last= array.length-1;
		int flag=0;
		while(first<=last&&flag==0) {
			int mid=(first+last)/2;
			if(array[mid]==key) {
				flag=1;
				System.out.println("the index of key elemnt "+ (mid+1) );
				
			}
			else if(array[mid]>key) {
				last=mid-1;
			}
			else if(array[mid]<key) {
				first=mid+1;
			}
			
		}
		if(flag==0) {
		System.out.println("key not there");
		}
		else {
			System.out.println("key found");
		}
		
}
	#function to find reverse the number
	public static void RevreseN() {
		int n,count=0,rev=0;
		
		Scanner sc = new Scanner(System.in);
		System.out.println("enter the number");
		n = sc.nextInt();
		int original = n;
		
		while(n>0) {
			rev= (rev*10)+n%10;
			n=n/10;
			count++;
		}
		System.out.println("number of digit"+count);
		System.out.println("reversed number"+rev);
		if(original==rev) {
			System.out.println("palindrome");
		}
		else {
			System.out.println(" not palindrome");
		}
		
	}
	#function to find GCD
public static int  GCD(int a,int b) {

	while(a!=b) {
		if(a>b) {
			a=a-b;
		}
		else {
			b=b-a;
		}
	}
	return a;
}

public static int LCM(int a,int b){
 
	return a*b/GCD(a,b);
}

public static void Bubblesort() {
	Scanner sc = new Scanner(System.in);
	System.out.println("enter the number of items");
	int n = sc.nextInt();
	int[] array = new int[n];
	System.out.println("enter the items");
	for(int i=0;i<n;i++) {
		array[i]=sc.nextInt();
	}
	for(int i=0;i<n;i++) {
		for(int j=0;j<n-i-1;j++) {
			if(array[j]>array[j+1]) {
				int temp =array[j];
				array[j]= array[j+1];
				array[j+1]=temp;
				
			}
		}
		
	}
	for(int i =0;i<n;i++) {
		System.out.println(array[i]);
		
	}
	
}
#function to find fibonacci 
public static void Fibonacci() {
	Scanner sc = new Scanner(System.in);
	System.out.println("enter the number of items");
	int n = sc.nextInt();
	int f=1;
	int s=2;
	
	for(int i=2;i<=n;i++) {
		int t = f+s;
		f=s;
		s=t;
	}
	System.out.println(s);
}
	#function to find prime numbers in range	
public static void Prime() {
	Scanner sc = new Scanner(System.in);
	System.out.println("enter the starting number");
	int min = sc.nextInt();
	System.out.println("enter the ending number");
	int max =  sc.nextInt();
	int flag=0;
	for(int n=min;n<max;n++) {
		
		for(int i=2;i<n;i++) {
			if(n%i==0) {
				flag=1;
				break;
			}
		}
		if(flag==0) {
			System.out.println(n+" ");
		}
		flag=0;
		
	}
	
	
	
	
}

	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner in = new Scanner(System.in);	
		int choice;
		while(true) {
			System.out.println("1.second_largest_index 2.Duplicate_element 3.Binary_search  4.Reverse&Count 5.GCD 6.LCM 7.Bubblesort 8.fibonacci"
					+" 9. prime  0.exit");
			choice = in.nextInt();
			switch(choice) {
			case 1 : 
				Duplicate_element();
				break;
			case 2 :
				second_largest_index();
				break;
				
			case 3 :
				Binary_Search();
				break;
			                                                 
			case 4:
				RevreseN();
				break;
			case 5:
				Scanner sc = new Scanner(System.in);
				System.out.println("enter first NO");
				int a = sc.nextInt();
				System.out.println("enter Sec NO");
				int b=sc.nextInt();
				System.out.println(GCD(a,b));
				break;
			
			case 6 :
				Scanner sc1 = new Scanner(System.in);
				System.out.println("enter first NO");
				int c = sc1.nextInt();
				System.out.println("enter Sec NO");
				int d =sc1.nextInt();
				 System.out.println(LCM(c,d));
				 break;
			
			case 7 :
				Bubblesort();
				break;
			case 8:
				Fibonacci();
				break;
			case 9:
				Prime();
				break;
				
			default :
				System.exit(0);	
			}
		}
			
	}

}
